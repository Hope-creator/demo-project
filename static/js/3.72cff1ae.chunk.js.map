{"version":3,"sources":["components/Dialogs/DialogItem/DialogsItem.module.css","components/Dialogs/Dialogs.module.css","hoc/withAuthRedirect.js","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","mapStateToPropsForRedirect","state","isAuth","auth","DialogItem","props","className","s","dialog","to","id","activeClassName","active","dialog_media","src","media_src","alt","media_object","media_info","name","Message","message","AddMessageForm","onSubmit","values","onAddMessage","newMessageBody","render","handleSubmit","sendButton","message_button","type","message_area","validate","composeValidators","required","maxLength","component","Textarea","placeholder","Dialogs","dialogsPage","dialogsElements","dialogsItems","map","d","messagesElements","dialogsMessages","m","dialogs","dialogs_items","messagesWrapper","addMessage","messages","compose","connect","newDialogMessage","dispatch","addMessageActionCreator","Component","RedirectComponent","this","React"],"mappings":"0FACAA,EAAOC,QAAU,CAAC,OAAS,4BAA4B,aAAe,kCAAkC,aAAe,kCAAkC,WAAa,gCAAgC,OAAS,8B,mBCA/MD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,cAAgB,+BAA+B,gBAAkB,iCAAiC,aAAe,8BAA8B,WAAa,8B,sICG7MC,EAA6B,SAACC,GAC9B,MAAO,CACHC,OAAQD,EAAME,KAAKD,S,wDCWZE,EAbI,SAACC,GAChB,OACI,yBAAKC,UAAWC,IAAEC,QACd,kBAAC,IAAD,CAASC,GAAI,YAAcJ,EAAMK,GAAIC,gBAAiBJ,IAAEK,QACpD,yBAAKN,UAAWC,IAAEM,cACd,yBAAKC,IAAKT,EAAMU,UAAWC,IAAI,MAAMV,UAAWC,IAAEU,eAClD,yBAAKX,UAAWC,IAAEW,YAAab,EAAMc,U,kCCD1CC,EANC,SAACf,GACb,OACI,yBAAKC,UAAWC,IAAEc,SAAlB,IAA6BhB,EAAMgB,UCqCrCC,EAAiB,SAACjB,GAKpB,OACI,kBAAC,IAAD,CACIkB,SANS,SAACC,GACdnB,EAAMoB,aAAaD,EAAOE,iBAMtBC,OAAQ,gBAAGC,EAAH,EAAGA,aAAH,OACJ,0BAAML,SAAUK,GACZ,yBAAKtB,UAAWC,IAAEsB,YACd,4BAAQvB,UAAWC,IAAEuB,eAAgBC,KAAK,UAA1C,QACA,4BAAQzB,UAAWC,IAAEuB,eAAgBC,KAAK,UAA1C,YACA,yBAAKzB,UAAWC,IAAEyB,cACd,kBAAC,IAAD,CAAOb,KAAK,iBAAiBc,SAAWC,YAAkBC,IAAUC,YAAU,MAAOC,UAAWC,IAAUC,YAAY,8BASnIC,EAvDC,SAACnC,GACb,IAAIoC,EAAcpC,EAAMoC,YAEpBC,EAAkBD,EAAYE,aAAaC,KAAI,SAACC,GAAD,OAC/C,kBAAC,EAAD,CAAY1B,KAAM0B,EAAE1B,KAAMT,GAAImC,EAAEnC,GAAIK,UAAW8B,EAAE9B,eAEjD+B,EAAmBL,EAAYM,gBAAgBH,KAAI,SAACI,GAAD,OACnD,kBAAC,EAAD,CAAS3B,QAAS2B,EAAE3B,aAMxB,OAAKhB,EAAMH,OAIP,yBAAKI,UAAWC,IAAE0C,SAEd,yBAAK3C,UAAWC,IAAE2C,eACbR,GAEL,yBAAKpC,UAAWC,IAAE4C,iBACd,kBAAC,EAAD,CAAgB1B,aAdV,SAACD,GACfnB,EAAM+C,WAAW5B,OAeb,yBAAKlB,UAAWC,IAAE8C,UACbP,IAba,kBAAC,IAAD,CAAUrC,GAAI,YCF7B6C,sBACXC,aAhBkB,SAACtD,GACnB,MAAO,CACHwC,YAAaxC,EAAMwC,YACnBe,iBAAkBvD,EAAMwC,YAAYe,qBAInB,SAACC,GACtB,MAAO,CACHL,WAAY,SAAC/B,GACToC,EAASC,YAAwBrC,UJNb,SAACsC,GAAe,IAEtCC,EAFqC,uKAInC,OAAKC,KAAKxD,MAAMH,OACJ,kBAACyD,EAAcE,KAAKxD,OADD,kBAAC,IAAD,CAAUI,GAAI,eAJV,GAEXqD,IAAMH,WAWtC,OAFiCJ,YAAQvD,EAARuD,CAAoCK,KIA1DN,CAGbd","file":"static/js/3.72cff1ae.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogsItem_dialog__1NH0q\",\"dialog_media\":\"DialogsItem_dialog_media__1bC5E\",\"media_object\":\"DialogsItem_media_object__Q4B3a\",\"media_info\":\"DialogsItem_media_info__9D9TM\",\"active\":\"DialogsItem_active__2WjUg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__j0dC6\",\"dialogs_items\":\"Dialogs_dialogs_items__2-NzQ\",\"messagesWrapper\":\"Dialogs_messagesWrapper__126ki\",\"message_area\":\"Dialogs_message_area__1zdsU\",\"sendButton\":\"Dialogs_sendButton__3Uve5\"};","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={\"/login\"} />;\r\n            else return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n\r\n\r\n    let ConnectedRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedRedirectComponent;\r\n}","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './DialogsItem.module.css';\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className={s.dialog}>\r\n            <NavLink to={\"/dialogs/\" + props.id} activeClassName={s.active}>\r\n                <div className={s.dialog_media}>\r\n                    <img src={props.media_src} alt=\"pic\" className={s.media_object} />\r\n                    <div className={s.media_info}>{props.name}</div>\r\n                </div>\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './Message.module.css';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.message}> {props.message}</div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport { Field, Form } from 'react-final-form';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { composeValidators, maxLength, required } from '../../utils/validators/validators';\r\nimport { Textarea } from '../common/FormsContol/FormsControl';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport s from './Dialogs.module.css';\r\nimport Message from './Message/Message';\r\n\r\n\r\nconst Dialogs = (props) => {\r\n    let dialogsPage = props.dialogsPage\r\n\r\n    let dialogsElements = dialogsPage.dialogsItems.map((d) =>\r\n        <DialogItem name={d.name} id={d.id} media_src={d.media_src} />)\r\n\r\n    let messagesElements = dialogsPage.dialogsMessages.map((m) =>\r\n        <Message message={m.message} />)\r\n\r\n   let onAddMessage = (values) => {\r\n        props.addMessage(values);\r\n    }\r\n\r\n    if (!props.isAuth) return <Redirect to={\"/login\"} />;\r\n\r\n    \r\n    return (\r\n        <div className={s.dialogs}>\r\n\r\n            <div className={s.dialogs_items}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messagesWrapper}>\r\n                <AddMessageForm onAddMessage={onAddMessage}/>\r\n            </div>\r\n            <div className={s.messages}>\r\n                {messagesElements}\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nconst AddMessageForm = (props) => {\r\n    const onSubmit = (values) => {\r\n        props.onAddMessage(values.newMessageBody)\r\n    }\r\n\r\n    return (\r\n        <Form\r\n            onSubmit={onSubmit}\r\n            render={({ handleSubmit }) =>\r\n                <form onSubmit={handleSubmit}>\r\n                    <div className={s.sendButton}>\r\n                        <button className={s.message_button} type=\"submit\">Send</button>\r\n                        <button className={s.message_button} type=\"button\">add file</button>\r\n                        <div className={s.message_area}>\r\n                            <Field name=\"newMessageBody\" validate={ composeValidators(required, maxLength(100))} component={Textarea} placeholder=\"Enter your message\" />\r\n                        </div>\r\n                    </div>\r\n                </form>}\r\n        />\r\n\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { addMessageActionCreator } from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n        newDialogMessage: state.dialogsPage.newDialogMessage,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) =>{\r\n    return {\r\n        addMessage: (message) => {\r\n            dispatch(addMessageActionCreator(message));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}